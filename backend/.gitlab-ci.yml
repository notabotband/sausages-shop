stages:
  - build-jar
  - build-docker
  - test-sonar
  - test
  - release
  - notification
  - deploy
include:
  - template: Security/SAST.gitlab-ci.yml
  - project: "templates/ci"
    file: "DockerInDockerTemplate.yml"
variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ./.m2/repository
  JAVA_OPTS: -XX:MaxRAMPercentage=90

build-jar:
  stage: build-jar
  script:
    - echo "ARTIFACT_JOB_ID=${CI_JOB_ID}" > CI_JOB_ID.txt
    - cd ${CI_PROJECT_DIR}/backend
    - mvn package -Dversion.application=${VERSION} -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository
    - mkdir ${CI_PROJECT_DIR}/sausage-store-${VERSION}
    - cp ${CI_PROJECT_DIR}/backend/target/sausage-store-${VERSION}.jar ${CI_PROJECT_DIR}/backend/sausage-store-${VERSION}.jar
    - mv ${CI_PROJECT_DIR}/backend/target/sausage-store-${VERSION}.jar ${CI_PROJECT_DIR}/sausage-store-${VERSION}/sausage-store-${VERSION}.jar
  artifacts:
    paths:
      - sausage-store-${VERSION}/sausage-store-${VERSION}.jar
      - backend/sausage-store-${VERSION}.jar
      - ${CI_PROJECT_DIR}/.m2/
    reports:
      dotenv: CI_JOB_ID.txt

spotbugs-sast:
  variables:
    COMPILE: "true"
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository

sonarqube-backend:
  image:
    name: maven:3.8-openjdk-16
  variables:
    SONAR_HOST_URL: "${SONARQUBE_URL}"
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    SONAR_BACKEND_LOGIN: "${SONAR_BACKEND_LOGIN}"
    SONAR_BACKEND_PROJECT_KEY: "${SONAR_BACKEND_PROJECT_KEY}"
    SONAR_BACKEND_PROJECT_NAME: "${SONAR_BACKEND_PROJECT_NAME}"
    GIT_DEPTH: "0"
  stage: test-sonar
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectName=${SONAR_BACKEND_PROJECT_NAME}
      -Dsonar.projectKey=${SONAR_BACKEND_PROJECT_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_BACKEND_LOGIN}
  allow_failure: true

build-backend:
  stage: build-docker
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - ls -la
    - mv ./sausage-store-${VERSION}/sausage-store-${VERSION}.jar ./backend/sausage-store.jar
    - cd backend
    - ls -la
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/sausage-backend:${VERSION}
      .
    - docker push $CI_REGISTRY_IMAGE/sausage-backend:${VERSION}
  dependencies:
    - build-jar

release:
  stage: release
  script:
    - cd backend
    - mvn deploy -DskipTests -Dversion.application=${VERSION} -Dmaven.repo.local=${MAVEN_REPO_PATH} -s settings.xml
  rules:
    - changes:
        - backend/*

upload-backend-latest:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - >
      docker pull $CI_REGISTRY_IMAGE/sausage-backend:${VERSION} &&
      docker tag $CI_REGISTRY_IMAGE/sausage-backend:${VERSION} $CI_REGISTRY_IMAGE/sausage-backend:latest &&
      docker push $CI_REGISTRY_IMAGE/sausage-backend:latest

deploy-backend:
  stage: deploy
  image: vault:1.11.3
  before_script:
    - apk add openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=sausage-store jwt=$CI_JOB_JWT)"
    - ssh ${DEV_USER}@${DEV_HOST}
      "export "VERSION=${VERSION}";
      export "SPRING_DATASOURCE_PORT=${PSQL_PORT}"
      export "SPRING_DATASOURCE_NAME=${PSQL_NAME}"
      export "SPRING_DATASOURCE_URL=${PSQL_HOST}";
      export "SPRING_VAULT_HOST=${SPRING_VAULT_HOST}";
      export "SPRING_DATASOURCE_USERNAME=std-013-59";
      export "SPRING_DATASOURCE_PASSWORD=230703Stas";
      export "SPRING_DATA_MONGODB_URI=$(vault kv get -field=spring.data.mongodb.uri secret/sausage-store)";
      export "DOCKER_GITLAB_USER=${DOCKER_GITLAB_USER}";
      export "DOCKER_GITLAB_TOCKEN=${DOCKER_GITLAB_TOCKEN}";
      /bin/bash -s " < ./backend/backend_deploy.sh
  environment:
    name: staging
    url: https://${DEV_HOST}
  when: manual


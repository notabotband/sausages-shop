stages:
  - build
  - notify
  - test

include:
  - template: Security/SAST.gitlab-ci.yml

build-backend-code-job:
  stage: build
  only:
    changes:
      - backend/*
  script:
    - cd backend
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/.m2/
      - backend/target/sausage-store-0.0.1-SNAPSHOT.jar

build-frontend-code-job:
  stage: build
  only:
    changes:
      - frontend/*
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend

pachca-notification-backend:
  stage: notify
  only:
    changes:
      - backend/*
    variables:
      - $CI_COMMIT_MESSAGE =~ /send notification/
  script:
    - 'curl -X POST -H "Content-type: application/json" --data "{\"message\":\"Антипов Станислав собрал backend приложения. Ссылка на артефакт: $CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_BRANCH/download?job=build-backend-code-job\"}" "https://api.pachca.com/webhooks/01GHKAEEBHC027DJAH7CHPTVF1"'
  needs:
    - build-backend-code-job

pachca-notification-frontend:
  stage: notify
  only:
    changes:
      - frontend/*
    variables:
      - $CI_COMMIT_MESSAGE =~ /send notification/
  script:
    - 'curl -X POST -H "Content-type: application/json" --data "{\"message\":\"Антипов Станислав собрал frontend приложения. Ссылка на артефакт: $CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_BRANCH/download?job=build-frontend-code-job\"}" "https://api.pachca.com/webhooks/01GHKAEEBHC027DJAH7CHPTVF1"'
  needs:
    - build-frontend-code-job

spotbugs-sast:
  dependencies:
    - build-backend-code-job
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 17
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository

sonarqube-backend-sast:
  stage: test
  dependencies:
    - build-backend-code-job
  image: maven:3.8-openjdk-16
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectName=${SONAR_BACKEND_PROJECT_NAME}
      -Dsonar.projectKey=${SONAR_BACKEND_PROJECT_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_BACKEND_LOGIN}

sonarqube-frontend-sast:
  stage: test
  dependencies:
    - build-frontend-code-job
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.sources=.
      -Dsonar.projectName=${SONAR_FRONTEND_PROJECT_NAME}
      -Dsonar.projectKey=${SONAR_FRONTEND_PROJECT_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_FRONTEND_LOGIN}
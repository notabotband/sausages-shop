cache:
  paths:
    - frontend/dist/frontend

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

.before_script_template: &deploy-start
  before_script:
    #устанавливаем ssh-agent для удобства аутентификации по ssh
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    #сохраняем сгенеренный ранее приватный ключ для раннера
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

include:
  - template: Security/SAST.gitlab-ci.yml

stages:
  - build
  - test
  - release
  - notify
  - deploy

build:
  stage: build
  script:
    - cd frontend
    - npm install
    - npm run build
  only:
    changes:
      - frontend/*

sonarqube-frontend-sast:
  stage: test
  dependencies:
    - build
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.sources=.
      -Dsonar.projectName=${SONAR_FRONTEND_PROJECT_NAME}
      -Dsonar.projectKey=${SONAR_FRONTEND_PROJECT_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_FRONTEND_LOGIN}

release:
  stage: release
  needs:
    - build
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - >
      curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL}/sausage-store-antipov-stanislav-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
  only:
    changes:
      - frontend/*

telegram-notification-frontend:
  stage: notify
  only:
    changes:
      - frontend/*
  needs:
    - release
  script:
    - "curl -X POST -H 'Content-type: application/json' --data '{\"chat_id\": \"'${TELEGRAM_CANAL_ID}'\", \"text\": \"Вышла новая версия frontend '$CI_PROJECT_NAME' - '${VERSION}'. Скачать frontend можно по ссылке — '${NEXUS_REPO_URL}'/sausage-store-antipov-stas-frontend/com/yandex/practicum/devops/sausage-store/'${VERSION}'/sausage-store-'${VERSION}'.tar.gz \"}' https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage"

deploy:
  stage: deploy
  <<: *deploy-start
  script:
    - scp ./frontend/sausage-store-frontend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-frontend.service
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL=${NEXUS_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}"; setsid /bin/bash -s " < frontend/deploy.sh
  environment:
    name: development
    url: https://${DEV_HOST}
